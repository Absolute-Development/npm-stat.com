/*
 * This file is generated by jOOQ.
*/
package de.vorb.npmstat.persistence.jooq.tables;


import de.vorb.npmstat.persistence.converters.LocalDateConverter;
import de.vorb.npmstat.persistence.jooq.Keys;
import de.vorb.npmstat.persistence.jooq.Public;
import de.vorb.npmstat.persistence.jooq.tables.records.DownloadCountRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DownloadCount extends TableImpl<DownloadCountRecord> {

    private static final long serialVersionUID = -612214605;

    /**
     * The reference instance of <code>public.download_count</code>
     */
    public static final DownloadCount DOWNLOAD_COUNT = new DownloadCount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DownloadCountRecord> getRecordType() {
        return DownloadCountRecord.class;
    }

    /**
     * The column <code>public.download_count.package_id</code>.
     */
    public final TableField<DownloadCountRecord, Long> PACKAGE_ID = createField("package_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.download_count.date</code>.
     */
    public final TableField<DownloadCountRecord, LocalDate> DATE = createField("date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "", new LocalDateConverter());

    /**
     * The column <code>public.download_count.count</code>.
     */
    public final TableField<DownloadCountRecord, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.download_count</code> table reference
     */
    public DownloadCount() {
        this("download_count", null);
    }

    /**
     * Create an aliased <code>public.download_count</code> table reference
     */
    public DownloadCount(String alias) {
        this(alias, DOWNLOAD_COUNT);
    }

    private DownloadCount(String alias, Table<DownloadCountRecord> aliased) {
        this(alias, aliased, null);
    }

    private DownloadCount(String alias, Table<DownloadCountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DownloadCountRecord> getPrimaryKey() {
        return Keys.DOWNLOAD_COUNT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DownloadCountRecord>> getKeys() {
        return Arrays.<UniqueKey<DownloadCountRecord>>asList(Keys.DOWNLOAD_COUNT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DownloadCountRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DownloadCountRecord, ?>>asList(Keys.DOWNLOAD_COUNT__DOWNLOAD_COUNT_PACKAGE_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DownloadCount as(String alias) {
        return new DownloadCount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DownloadCount rename(String name) {
        return new DownloadCount(name, null);
    }
}
